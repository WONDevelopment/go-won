os: Visual Studio 2015

# Clone directly into GOPATH.
clone_folder: C:\gopath\src\github.com\worldopennetwork/go-won
clone_depth: 5
version: "{branch}.{build}"
environment:
  global:
    GOPATH: C:\gopath
    CC: gcc.exe
  matrix:
    - GWON_ARCH: amd64
      MSYS2_ARCH: x86_64
      MSYS2_BITS: 64
      MSYSTEM: MINGW64
      PATH: C:\msys64\mingw64\bin\;C:\Program Files (x86)\NSIS\;%PATH%
    - GWON_ARCH: 386
      MSYS2_ARCH: i686
      MSYS2_BITS: 32
      MSYSTEM: MINGW32
      PATH: C:\msys64\mingw32\bin\;C:\Program Files (x86)\NSIS\;%PATH%

install:
  - git submodule update --init
  - rmdir C:\go /s /q
  - appveyor DownloadFile https://storage.googleapis.com/golang/go1.10.1.windows-%GWON_ARCH%.zip
  - 7z x go1.10.1.windows-%GWON_ARCH%.zip -y -oC:\ > NUL
  - go version
  - gcc --version

artifacts:
- path: 'gwon-*.zip'
  name: project-zip
  type: zip

build_script:
  - go run build\ci.go install

after_build:
  - go run build\ci.go archive -type zip
#  - go run build\ci.go nsis -signer WINDOWS_SIGNING_KEY -upload gwonstore/builds
  - ps: Get-FileHash -a sha1 gwon-*

#test_script:
#  - set CGO_ENABLED=1
#  - go run build\ci.go test -coverage

deploy:
  provider: GitHub
  release: $(APPVEYOR_REPO_TAG_NAME)
  name: Gwon-bin-draft
  description: "Release description (to be)"
  auth_token:
    secure: /BB54uB3GO7jFxySEZkXlFnHO0RpAJwLMWiyYW/6+zTF/52wzyB1OZjki38YZrTN
  artifact: project-zip
  draft: true
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: false        # deploy on tag push only